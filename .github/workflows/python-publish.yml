# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish-Python-Package

on:
  release:
    types: [published]

jobs:
  deploy-sdist:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Install Ubuntu system dependencies
      run: |
        sudo apt-get install -y --no-install-recommends ninja-build
    - name: Build DP-XGBoost
      shell: bash -l {0}
      run: |
        cd python-package
        python --version
        python setup.py sdist
    - name: Publish source to PyPI
      run: |
        pip install twine
        python -m twine upload python-package/dist/* || true
  
  build-wheels-non-linux:
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    strategy:
      matrix:
        os: [macos-10.15, windows-latest]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install osx system dependencies
      if: matrix.os == 'macos-10.15'
      run: |
        brew install ninja libomp
    - name: Build DP-XGBoost
      run: |
        cd python-package
        python --version
        pip install wheel cmake
        python setup.py bdist_wheel
    - name: Publish wheels to PyPI
      run: |
        pip install twine
        python -m twine upload python-package/dist/* || true

  build-wheels-linux:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Build DP-XGBoost
      uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m'
        build-requirements: 'cmake'
        package-path: 'python-package'
    - name: Publish wheels to PyPI
      run: |
        pip install twine
        python -m twine upload python-package/dist/*-manylinux*.whl || true
    
    
  
