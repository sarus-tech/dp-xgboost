# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

jobs:
  deploy-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Install Ubuntu system dependencies
      run: |
        sudo apt-get install -y --no-install-recommends ninja-build
    - name: Build DP-XGBoost
      shell: bash -l {0}
      run: |
        cd python-package
        python --version
        python setup.py sdist
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: python-package/dist/
  
  build-wheels:
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    strategy:
      matrix:
        os: [macos-10.15, windows-latest, ubuntu-latest]
        python-version: ["3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Install osx system dependencies
      if: matrix.os == 'macos-10.15'
      run: |
        brew install ninja libomp
    - name: Install Ubuntu system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get install -y ninja-build docker-ce docker-ce-cli containerd.io
    - name: Build DP-XGBoost Ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash -l {0}
      run: |
        sudo docker run --rm -v $(pwd):/dp-xgboost quay.io/pypa/manylinux_2_24_x86_64 bash -c "cd /dp-xgboost/python-package; /opt/python/cp38-cp38/bin/pip install cmake; /opt/python/cp38-cp38/bin/python setup.py bdist_wheel"
    - name: Build DP-XGBoost Others
      if: matrix.os != 'ubuntu-latest'
      shell: bash -l {0}
      run: |
        cd python-package
        python --version
        python setup.py bdist_wheel
    - name: Upload wheel
      run: |
        pip install twine
        python -m twine upload python-package/dist/*
  